// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TranspotationTicketBooking.Data;

namespace TranspotationTicketBooking.Migrations
{
    [DbContext(typeof(TicketBookingDBContext))]
    [Migration("20210204135250_dubura6")]
    partial class dubura6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "35fd0b10-2883-4726-b35e-870054fc83e0",
                            ConcurrencyStamp = "43c171ee-4195-4b6b-b441-5b7ab1345e50",
                            Name = "Visitor",
                            NormalizedName = "VISITOR"
                        },
                        new
                        {
                            Id = "66057f70-c0e2-4c66-9426-d0780d2d2578",
                            ConcurrencyStamp = "b8a7f4a8-f356-47a3-8da1-e86b9d440e2c",
                            Name = "Passenger",
                            NormalizedName = "PASSENGER"
                        },
                        new
                        {
                            Id = "77d6ce64-cd6e-485d-90e5-6dad0d923087",
                            ConcurrencyStamp = "c5c3f347-6617-45d6-91c9-7adc8cd7ad28",
                            Name = "Busowner",
                            NormalizedName = "BUSOWNER"
                        },
                        new
                        {
                            Id = "5f4221b2-6564-4041-8ac6-1609af698370",
                            ConcurrencyStamp = "acdbdbf0-7807-4902-a2dc-c188347f0b27",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("IdentityUserRole<string>");
                });

            modelBuilder.Entity("TranspotationTicketBooking.Models.BusInfo", b =>
                {
                    b.Property<string>("BusNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CondNo")
                        .HasColumnType("int");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverNo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Verified")
                        .HasColumnType("int");

                    b.HasKey("BusNo");

                    b.ToTable("BusInfo");
                });

            modelBuilder.Entity("TranspotationTicketBooking.Models.Passenger", b =>
                {
                    b.Property<long>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tp")
                        .HasColumnType("bigint");

                    b.Property<int>("Verified")
                        .HasColumnType("int");

                    b.HasKey("PId");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("TranspotationTicketBooking.Models.Route", b =>
                {
                    b.Property<long>("RId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("Distance")
                        .HasColumnType("bigint");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("RNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartHolt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StartHoltId")
                        .HasColumnType("bigint");

                    b.Property<string>("StopHolt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StopHoltId")
                        .HasColumnType("bigint");

                    b.HasKey("RId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("TranspotationTicketBooking.Models.RouteInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("Distance")
                        .HasColumnType("bigint");

                    b.Property<long>("HoltId")
                        .HasColumnType("bigint");

                    b.Property<string>("HoltName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<long>("RId")
                        .HasColumnType("bigint");

                    b.Property<float>("Time")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("RouteInfo");
                });

            modelBuilder.Entity("TranspotationTicketBooking.Models.Session", b =>
                {
                    b.Property<long>("SId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BusNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("RId")
                        .HasColumnType("bigint");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("TranspotationTicketBooking.Models.Ticket", b =>
                {
                    b.Property<long>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromHalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.Property<long>("PId")
                        .HasColumnType("bigint");

                    b.Property<int>("PStatus")
                        .HasColumnType("int");

                    b.Property<long>("SId")
                        .HasColumnType("bigint");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToHalt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("TranspotationTicketBooking.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
